// ------------------------------------------------------------------------------
//  <auto-generated>
//      このコードは、コード化された UI テスト ビルダーによって生成されました。
//      バージョン: 14.0.0.0
//
//      このファイルへの変更は、正しくない動作の原因になる可能性があり、
//      コードが再生成された場合に失われる可能性があります。
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MvvmSample.DesktopTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddItem - このメソッドにパラメーターを渡すには 'AddItemParams' を使用します。
        /// </summary>
        public void AddItem()
        {
            #region Variable Declarations
            WpfButton uIHomeButton = this.UIMVVMSampleWindow.UIRibbonTabList.UIHOMETabPage.UINavigateGroup.UISystemWindowsControlListItem.UIHomeButton;
            WpfButton uIProductsButton = this.UIMVVMSampleWindow.UIRibbonTabList.UIHOMETabPage.UINavigateGroup.UISystemWindowsControlListItem1.UIProductsButton;
            WpfButton uINewItemButton = this.UIMVVMSampleWindow.UIRibbonTabList.UIHOMETabPage.UIEditGroup.UISystemWindowsControlListItem.UINewItemButton;
            WpfEdit uITitleEdit = this.UIMVVMSampleWindow.UIMainFramePane.UITitleEdit;
            WpfEdit uIProductUrlEdit = this.UIMVVMSampleWindow.UIMainFramePane.UIProductUrlEdit;
            WpfButton uISaveButton = this.UIMVVMSampleWindow.UIMainFramePane.UISaveButton;
            #endregion

            // クリック 'Home' ボタン
            Mouse.Click(uIHomeButton, new Point(51, 21));

            // クリック 'Products' ボタン
            Mouse.Click(uIProductsButton, new Point(49, 6));

            // クリック 'New Item' ボタン
            Mouse.Click(uINewItemButton, new Point(40, 13));

            // 'Title' テキスト ボックス に 'TEST ITEM' を入力
            uITitleEdit.Text = this.AddItemParams.UITitleEditText;

            // クリック 'ProductUrl' テキスト ボックス
            Mouse.Click(uIProductUrlEdit, new Point(56, 6));

            // クリック 'Save' ボタン
            Mouse.Click(uISaveButton, new Point(55, 19));
        }
        
        #region Properties
        public virtual AddItemParams AddItemParams
        {
            get
            {
                if ((this.mAddItemParams == null))
                {
                    this.mAddItemParams = new AddItemParams();
                }
                return this.mAddItemParams;
            }
        }
        
        public UIMVVMSampleWindow UIMVVMSampleWindow
        {
            get
            {
                if ((this.mUIMVVMSampleWindow == null))
                {
                    this.mUIMVVMSampleWindow = new UIMVVMSampleWindow();
                }
                return this.mUIMVVMSampleWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddItemParams mAddItemParams;
        
        private UIMVVMSampleWindow mUIMVVMSampleWindow;
        #endregion
    }
    
    /// <summary>
    /// 'AddItem' に渡されるパラメーターです
    /// </summary>
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class AddItemParams
    {
        
        #region Fields
        /// <summary>
        /// 'Title' テキスト ボックス に 'TEST ITEM' を入力
        /// </summary>
        public string UITitleEditText = "TEST ITEM";
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UIMVVMSampleWindow : WpfWindow
    {
        
        public UIMVVMSampleWindow()
        {
            #region 検索条件
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MVVM Sample";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public UIRibbonTabList UIRibbonTabList
        {
            get
            {
                if ((this.mUIRibbonTabList == null))
                {
                    this.mUIRibbonTabList = new UIRibbonTabList(this);
                }
                return this.mUIRibbonTabList;
            }
        }
        
        public UIMainFramePane UIMainFramePane
        {
            get
            {
                if ((this.mUIMainFramePane == null))
                {
                    this.mUIMainFramePane = new UIMainFramePane(this);
                }
                return this.mUIMainFramePane;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonTabList mUIRibbonTabList;
        
        private UIMainFramePane mUIMainFramePane;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UIRibbonTabList : WpfTabList
    {
        
        public UIRibbonTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "Ribbon";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public UIHOMETabPage UIHOMETabPage
        {
            get
            {
                if ((this.mUIHOMETabPage == null))
                {
                    this.mUIHOMETabPage = new UIHOMETabPage(this);
                }
                return this.mUIHOMETabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIHOMETabPage mUIHOMETabPage;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UIHOMETabPage : WpfTabPage
    {
        
        public UIHOMETabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "HOME";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public UINavigateGroup UINavigateGroup
        {
            get
            {
                if ((this.mUINavigateGroup == null))
                {
                    this.mUINavigateGroup = new UINavigateGroup(this);
                }
                return this.mUINavigateGroup;
            }
        }
        
        public UIEditGroup UIEditGroup
        {
            get
            {
                if ((this.mUIEditGroup == null))
                {
                    this.mUIEditGroup = new UIEditGroup(this);
                }
                return this.mUIEditGroup;
            }
        }
        #endregion
        
        #region Fields
        private UINavigateGroup mUINavigateGroup;
        
        private UIEditGroup mUIEditGroup;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UINavigateGroup : WpfGroup
    {
        
        public UINavigateGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Navigate";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public UISystemWindowsControlListItem UISystemWindowsControlListItem
        {
            get
            {
                if ((this.mUISystemWindowsControlListItem == null))
                {
                    this.mUISystemWindowsControlListItem = new UISystemWindowsControlListItem(this);
                }
                return this.mUISystemWindowsControlListItem;
            }
        }
        
        public UISystemWindowsControlListItem1 UISystemWindowsControlListItem1
        {
            get
            {
                if ((this.mUISystemWindowsControlListItem1 == null))
                {
                    this.mUISystemWindowsControlListItem1 = new UISystemWindowsControlListItem1(this);
                }
                return this.mUISystemWindowsControlListItem1;
            }
        }
        #endregion
        
        #region Fields
        private UISystemWindowsControlListItem mUISystemWindowsControlListItem;
        
        private UISystemWindowsControlListItem1 mUISystemWindowsControlListItem1;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UISystemWindowsControlListItem : WpfListItem
    {
        
        public UISystemWindowsControlListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "System.Windows.Controls.Ribbon.RibbonButton";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public WpfButton UIHomeButton
        {
            get
            {
                if ((this.mUIHomeButton == null))
                {
                    this.mUIHomeButton = new WpfButton(this);
                    #region 検索条件
                    this.mUIHomeButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GoHomeButton";
                    this.mUIHomeButton.WindowTitles.Add("MVVM Sample");
                    #endregion
                }
                return this.mUIHomeButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIHomeButton;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UISystemWindowsControlListItem1 : WpfListItem
    {
        
        public UISystemWindowsControlListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "System.Windows.Controls.Ribbon.RibbonButton";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public WpfButton UIProductsButton
        {
            get
            {
                if ((this.mUIProductsButton == null))
                {
                    this.mUIProductsButton = new WpfButton(this);
                    #region 検索条件
                    this.mUIProductsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GoProductsButton";
                    this.mUIProductsButton.WindowTitles.Add("MVVM Sample");
                    #endregion
                }
                return this.mUIProductsButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIProductsButton;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UIEditGroup : WpfGroup
    {
        
        public UIEditGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Edit";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public UISystemWindowsControlListItem2 UISystemWindowsControlListItem
        {
            get
            {
                if ((this.mUISystemWindowsControlListItem == null))
                {
                    this.mUISystemWindowsControlListItem = new UISystemWindowsControlListItem2(this);
                }
                return this.mUISystemWindowsControlListItem;
            }
        }
        #endregion
        
        #region Fields
        private UISystemWindowsControlListItem2 mUISystemWindowsControlListItem;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UISystemWindowsControlListItem2 : WpfListItem
    {
        
        public UISystemWindowsControlListItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "System.Windows.Controls.Ribbon.RibbonButton";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public WpfButton UINewItemButton
        {
            get
            {
                if ((this.mUINewItemButton == null))
                {
                    this.mUINewItemButton = new WpfButton(this);
                    #region 検索条件
                    this.mUINewItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddNewItemButton";
                    this.mUINewItemButton.WindowTitles.Add("MVVM Sample");
                    #endregion
                }
                return this.mUINewItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUINewItemButton;
        #endregion
    }
    
    [GeneratedCode("コード化された UI テスト ビルダー", "14.0.23107.0")]
    public class UIMainFramePane : WpfPane
    {
        
        public UIMainFramePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 検索条件
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "MainFrame";
            this.WindowTitles.Add("MVVM Sample");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new WpfEdit(this);
                    #region 検索条件
                    this.mUITitleEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Title";
                    this.mUITitleEdit.WindowTitles.Add("MVVM Sample");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public WpfEdit UIProductUrlEdit
        {
            get
            {
                if ((this.mUIProductUrlEdit == null))
                {
                    this.mUIProductUrlEdit = new WpfEdit(this);
                    #region 検索条件
                    this.mUIProductUrlEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ProductUrl";
                    this.mUIProductUrlEdit.WindowTitles.Add("MVVM Sample");
                    #endregion
                }
                return this.mUIProductUrlEdit;
            }
        }
        
        public WpfButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WpfButton(this);
                    #region 検索条件
                    this.mUISaveButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SaveButton";
                    this.mUISaveButton.WindowTitles.Add("MVVM Sample");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITitleEdit;
        
        private WpfEdit mUIProductUrlEdit;
        
        private WpfButton mUISaveButton;
        #endregion
    }
}
